<?xml version="1.0"?>
<doc>
    <assembly>
        <name>eHandbook.api</name>
    </assembly>
    <members>
        <member name="T:eHandbook.api.EndPoints.ManualEndPoints">
            <summary>
            Manual Minimal APIs endpoints. Used to create lightweight services that expose functionalities to clients.
            They handle incoming HTTP requests and process them to perform specific tasks, such as retrieving data, manipulating data, or performing some business logic.
            These APIs essentially represent a service layer responsible for handling external requests and providing responses.
            </summary>
        </member>
        <member name="M:eHandbook.api.EndPoints.ManualEndPoints.MapManualEndPoints(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder)">
            <summary>
            Ctor.
            </summary>
            <param name="app"></param>
        </member>
        <member name="T:eHandbook.api.Health.DatabaseServiceCustomHealthCheck">
            <summary>
            Checking DataBase Conection Health
            </summary>
        </member>
        <member name="M:eHandbook.api.Health.DatabaseServiceCustomHealthCheck.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Logging.ILogger{eHandbook.api.Health.DatabaseServiceCustomHealthCheck})">
            <summary>
            Ctor.
            </summary>
            <param name="configuration"></param>
            <param name="logger"></param>
        </member>
        <member name="M:eHandbook.api.Health.DatabaseServiceCustomHealthCheck.CheckHealthAsync(Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckContext,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:eHandbook.api.Middlewares.GlobalExceptionHandlerMiddleware">
            <summary>
            Defining Custom MiddleWare by convention for Global Error Handling.
            </summary>
        </member>
        <member name="M:eHandbook.api.Middlewares.GlobalExceptionHandlerMiddleware.#ctor(Microsoft.Extensions.Logging.ILogger{eHandbook.api.Middlewares.GlobalExceptionHandlerMiddleware})">
            <summary>
            Ctor.
            </summary>
            <param name="logger"></param>
        </member>
        <member name="M:eHandbook.api.Middlewares.GlobalExceptionHandlerMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            following converntion inside of the framework defining apublic async method that return a task, have a name InvokeAsync accepting http context argument.
            </summary>
            <param name="context"></param>
            <param name="next" ></param>
            <returns></returns>
        </member>
    </members>
</doc>
